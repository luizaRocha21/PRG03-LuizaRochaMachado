/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba;
import javax.swing.JOptionPane;
/**
 *
 * @author luiza
 */
public class RepeticaoSliderView extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(RepeticaoSliderView.class.getName());

    /**
     * Cria RepeticaoSliderView
     */
    public RepeticaoSliderView() {
        initComponents();
        configurarSliders(); // Configura valores iniciais dos sliders
        atualizarLabels(); // Atualiza labels com valores iniciais
    }

    /**
     * Configura valores iniciais dos sliders
     */
    private void configurarSliders() {
        sldInicio.setMinimum(0);
        sldInicio.setMaximum(100);
        sldInicio.setValue(2);
        
        sldFim.setMinimum(0);
        sldFim.setMaximum(100);
        sldFim.setValue(18);
        
        sldPasso.setMinimum(1);
        sldPasso.setMaximum(20);
        sldPasso.setValue(2);
    }

    /**
     * Atualiza todos os labels com os valores atuais dos sliders
     */
    private void atualizarLabels() {
        lblValorInicio.setText("Valor: " + sldInicio.getValue());
        lblValorFim.setText("Valor: " + sldFim.getValue());
        lblValorPasso.setText("Valor: " + sldPasso.getValue());
    }

    /**
     * Valida os dados antes de executar a contagem
     */
    private boolean validarDados() {
        int inicio = sldInicio.getValue();
        int fim = sldFim.getValue();
        int passo = sldPasso.getValue();
        
        // Verifica se início é maior que fim
        if (inicio > fim) {
            JOptionPane.showMessageDialog(this, 
                "Erro: O valor inicial não pode ser maior que o valor final!", 
                "Erro de Validação", 
                JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Verifica se passo é maior que a diferença entre fim e início
        if (passo > (fim - inicio)) {
            JOptionPane.showMessageDialog(this, 
                "Erro: O passo não pode ser maior que a diferença entre início e fim!", 
                "Erro de Validação", 
                JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Verifica se passo é zero
        if (passo == 0) {
            JOptionPane.showMessageDialog(this, 
                "Erro: O passo não pode ser zero!", 
                "Erro de Validação", 
                JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        return true;
    }

    /**
     * Executa a contagem baseada nos valores dos sliders
     */
    private void executarContagem() {
        if (!validarDados()) {
            return; // Para a execução se houver erro de validação
        }
        
        int inicio = sldInicio.getValue();
        int fim = sldFim.getValue();
        int passo = sldPasso.getValue();
        
        // Cria array para armazenar os números da contagem
        java.util.List<String> numeros = new java.util.ArrayList<>();
        
        // Realiza a contagem
        for (int i = inicio; i <= fim; i += passo) {
            numeros.add(String.valueOf(i));
        }
        
        // Atualiza a lista na interface
        listaNumeros.setListData(numeros.toArray(new String[0]));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblinicio = new javax.swing.JLabel();
        lblFim = new javax.swing.JLabel();
        lblPasso = new javax.swing.JLabel();
        sldInicio = new javax.swing.JSlider();
        sldFim = new javax.swing.JSlider();
        sldPasso = new javax.swing.JSlider();
        btnContar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaNumeros = new javax.swing.JList<>();
        imagem = new javax.swing.JLabel();
        lblValorInicio = new javax.swing.JLabel();
        lblValorFim = new javax.swing.JLabel();
        lblValorPasso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblinicio.setText("Início:");

        lblFim.setText("Fim:");

        lblPasso.setText("Passo:");

        sldInicio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldInicioStateChanged(evt);
            }
        });

        sldFim.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldFimStateChanged(evt);
            }
        });

        sldPasso.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldPassoStateChanged(evt);
            }
        });

        btnContar.setText("Contar");
        btnContar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContarActionPerformed(evt);
            }
        });

        listaNumeros.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "1", "2", "3", "4", "5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaNumeros);

        imagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ifba/images/numeros (1).png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFim)
                    .addComponent(lblinicio)
                    .addComponent(lblPasso))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sldInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sldFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sldPasso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblValorInicio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                                .addComponent(imagem))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblValorFim)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblValorPasso)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnContar)
                .addGap(268, 268, 268))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblinicio)
                                .addComponent(sldInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblValorInicio))
                            .addComponent(imagem))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFim)
                            .addComponent(sldFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblValorFim))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPasso)
                            .addComponent(sldPasso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblValorPasso)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btnContar)
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnContarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContarActionPerformed
        executarContagem(); // Executa a contagem quando o botão é pressionado
    }//GEN-LAST:event_btnContarActionPerformed

    private void sldInicioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldInicioStateChanged
        int valor = sldInicio.getValue();
        lblValorInicio.setText("Valor: " + valor);
    }//GEN-LAST:event_sldInicioStateChanged

    private void sldFimStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldFimStateChanged
        int valor = sldFim.getValue();
        lblValorFim.setText("Valor: " + valor);
    }//GEN-LAST:event_sldFimStateChanged

    private void sldPassoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldPassoStateChanged
        int valor = sldPasso.getValue();
        lblValorPasso.setText("Valor: " + valor);
    }//GEN-LAST:event_sldPassoStateChanged
                               
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RepeticaoSliderView().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnContar;
    private javax.swing.JLabel imagem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFim;
    private javax.swing.JLabel lblPasso;
    private javax.swing.JLabel lblValorFim;
    private javax.swing.JLabel lblValorInicio;
    private javax.swing.JLabel lblValorPasso;
    private javax.swing.JLabel lblinicio;
    private javax.swing.JList<String> listaNumeros;
    private javax.swing.JSlider sldFim;
    private javax.swing.JSlider sldInicio;
    private javax.swing.JSlider sldPasso;
    // End of variables declaration//GEN-END:variables
}
