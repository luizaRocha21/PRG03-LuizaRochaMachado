/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba;

import javax.swing.DefaultListModel;

/**
 *
 * @author luiza
 */
public class ListaVetor extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ListaVetor.class.getName());
    
    // Vetor para armazenar os números
    private int[] vetor = new int[10];
    // Modelo para a JList - permite atualizações dinâmicas
    private DefaultListModel<String> listModel;

    /**
     * Cria nova forma ListaVetor
     */
    public ListaVetor() {
        initComponents();
        inicializarVetor();
        inicializarListModel();
    }
    
    /**
     * Inicializa o vetor com zeros
     */
    private void inicializarVetor() {
        for (int i = 0; i < vetor.length; i++) {
            vetor[i] = 0;
        }
    }
    
    /**
     * Inicializa o modelo da lista e preenche com os valores iniciais
     */
    private void inicializarListModel() {
        listModel = new DefaultListModel<>();
        atualizarJList();
        listVetor.setModel(listModel);
    }
    
    /**
     * Atualiza a JList com os valores atuais do vetor
     * Formato: [posição]->valor
     */
    private void atualizarJList() {
        listModel.clear();
        for (int i = 0; i < vetor.length; i++) {
            listModel.addElement("[" + i + "]->" + vetor[i]);
        }
    }
    
    /**
     * Adiciona um número ao vetor na primeira posição disponível (valor 0)
     */
    private void adicionarNumero(int numero) {
        for (int i = 0; i < vetor.length; i++) {
            if (vetor[i] == 0) {
                vetor[i] = numero;
                atualizarJList();
                return;
            }
        }
        // Se não encontrou posição vazia, mostra esta mensagem
        javax.swing.JOptionPane.showMessageDialog(this, "Vetor cheio! Não é possível adicionar mais números.");
    }
    
    /**
     * Remove número na posição selecionada na JList
     */
    private void removerNumero(int indice) {
        if (indice >= 0 && indice < vetor.length) {
            vetor[indice] = 0;
            atualizarJList();
        }
    }
    
    /**
    * Ordena o vetor usando Bubble Sort em ordem crescente
     * Mantém os zeros nas últimas posições após a ordenação
    */
    private void ordenarVetor() {
        // Cria um vetor temporário apenas com números não-zero
        java.util.ArrayList<Integer> numeros = new java.util.ArrayList<>();
        for (int num : vetor) {
        if (num != 0) {
            numeros.add(num);
            }
        }
    
        // Ordena os números em ordem crescente
        java.util.Collections.sort(numeros);
    
        // Preenche o vetor original com números ordenados seguidos de zeros
        int index = 0;
        for (Integer num : numeros) {
            vetor[index++] = num;
        }
        // Preenche as posições restantes com zero
        while (index < vetor.length) {
            vetor[index++] = 0;
        }
    
    atualizarJList();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblValor = new javax.swing.JLabel();
        spnValor = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listVetor = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 204));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 38, -1, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblValor.setText("Valor:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lblValor)
                .addGap(31, 31, 31)
                .addComponent(spnValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValor)
                    .addComponent(spnValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 230, 90));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        listVetor.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listVetor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listVetorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listVetor);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 190, 270));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAdicionar)
                    .addComponent(btnRemover, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOrdenar, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnAdicionar)
                .addGap(18, 18, 18)
                .addComponent(btnRemover)
                .addGap(18, 18, 18)
                .addComponent(btnOrdenar)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 230, 160));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
         // Obtém o valor do spinner e adiciona ao vetor
        int valor = (Integer) spnValor.getValue();
        adicionarNumero(valor);
        // Reseta o spinner para 0 após adicionar
        spnValor.setValue(0);
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // Remove o item selecionado na JList
        int selectedIndex = listVetor.getSelectedIndex();
        if (selectedIndex != -1) {
            removerNumero(selectedIndex);
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Selecione um item para remover.");
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        // Ordena o vetor em ordem crescente
        ordenarVetor();
        javax.swing.JOptionPane.showMessageDialog(this, "Vetor ordenado com sucesso!");
    }//GEN-LAST:event_btnOrdenarActionPerformed

    private void listVetorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listVetorMouseClicked
        // Permite remover ao clicar duas vezes em um item
        if (evt.getClickCount() == 2) {
            int selectedIndex = listVetor.getSelectedIndex();
            if (selectedIndex != -1) {
                removerNumero(selectedIndex);
            }
        }
    }//GEN-LAST:event_listVetorMouseClicked
                             
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new ListaVetor().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblValor;
    private javax.swing.JList<String> listVetor;
    private javax.swing.JSpinner spnValor;
    // End of variables declaration//GEN-END:variables
}
