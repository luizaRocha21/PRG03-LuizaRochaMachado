/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author luiza
 */
public class Banco extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Banco.class.getName());
    private ContaBanco contaAtual; // Conta atualmente logada
    private List<ContaBanco> contas; // Lista de todas as contas do banco

    /**
     * Creates new form Banco
     */
    public Banco() {
        initComponents();
        this.contaAtual = null;
        this.contas = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        imgBanco = new javax.swing.JLabel();
        lblBanco = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        imagemAdicionar = new javax.swing.JLabel();
        imagemCancelar = new javax.swing.JLabel();
        imagemDepositar = new javax.swing.JLabel();
        imagemSacar = new javax.swing.JLabel();
        imagemPagar = new javax.swing.JLabel();
        btnAbrirConta = new javax.swing.JButton();
        btnCancelarConta = new javax.swing.JButton();
        btnDepositar = new javax.swing.JButton();
        btnSacar = new javax.swing.JButton();
        btnPagar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 19, -1, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        imgBanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ifba/images/banco (1).png"))); // NOI18N

        lblBanco.setFont(new java.awt.Font("Baskerville Old Face", 0, 36)); // NOI18N
        lblBanco.setText("Banco IFBA");
        lblBanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(imgBanco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(imgBanco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBanco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 400, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        imagemAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ifba/images/conta-bancaria.png"))); // NOI18N

        imagemCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ifba/images/cancelar.png"))); // NOI18N

        imagemDepositar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ifba/images/deposito.png"))); // NOI18N

        imagemSacar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ifba/images/saco-de-dolares.png"))); // NOI18N

        imagemPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ifba/images/pagar.png"))); // NOI18N

        btnAbrirConta.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        btnAbrirConta.setText("Abrir Conta");
        btnAbrirConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirContaActionPerformed(evt);
            }
        });

        btnCancelarConta.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        btnCancelarConta.setText("Cancelar Conta");
        btnCancelarConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarContaActionPerformed(evt);
            }
        });

        btnDepositar.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        btnDepositar.setText("Depositar");
        btnDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositarActionPerformed(evt);
            }
        });

        btnSacar.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        btnSacar.setText("Sacar");
        btnSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacarActionPerformed(evt);
            }
        });

        btnPagar.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        btnPagar.setText("Pagar mensalidade");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imagemPagar)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(imagemSacar)
                        .addComponent(imagemDepositar)
                        .addComponent(imagemCancelar)
                        .addComponent(imagemAdicionar)))
                .addGap(53, 53, 53)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAbrirConta)
                    .addComponent(btnCancelarConta)
                    .addComponent(btnDepositar)
                    .addComponent(btnSacar)
                    .addComponent(btnPagar))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(imagemAdicionar)
                                            .addComponent(btnAbrirConta))
                                        .addGap(18, 18, 18)
                                        .addComponent(imagemCancelar))
                                    .addComponent(btnCancelarConta))
                                .addGap(27, 27, 27)
                                .addComponent(imagemDepositar))
                            .addComponent(btnDepositar))
                        .addGap(30, 30, 30)
                        .addComponent(imagemSacar))
                    .addComponent(btnSacar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imagemPagar)
                    .addComponent(btnPagar))
                .addContainerGap())
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 400, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositarActionPerformed
        if (!fazerLogin()) return;
        
        try {
            String valorStr = JOptionPane.showInputDialog(this, 
                "Saldo atual: R$ " + contaAtual.getSaldo() + 
                "\nDigite o valor para depósito:", "Depósito", JOptionPane.QUESTION_MESSAGE);
            
            if (valorStr != null && !valorStr.trim().isEmpty()) {
                float valor = Float.parseFloat(valorStr);
                contaAtual.depositar(valor);
                JOptionPane.showMessageDialog(this, 
                    "Depósito realizado com sucesso!\nNovo saldo: R$ " + contaAtual.getSaldo(),
                    "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Valor inválido! Digite um número válido.", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDepositarActionPerformed

    private void btnAbrirContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirContaActionPerformed
        // Tela para abrir nova conta
        try {
            // Coleta dados do cliente
            String dono = JOptionPane.showInputDialog(this, "Nome completo do titular:", "Abrir Conta", JOptionPane.QUESTION_MESSAGE);
            if (dono == null || dono.trim().isEmpty()) return;
            
            String cpfCnpj = JOptionPane.showInputDialog(this, "CPF ou CNPJ:", "Abrir Conta", JOptionPane.QUESTION_MESSAGE);
            if (cpfCnpj == null || cpfCnpj.trim().isEmpty()) return;
            
            String telefone = JOptionPane.showInputDialog(this, "Telefone:", "Abrir Conta", JOptionPane.QUESTION_MESSAGE);
            if (telefone == null || telefone.trim().isEmpty()) return;
            
            String[] opcoes = {"Conta Corrente (cc)", "Conta Poupança (cp)"};
            int escolha = JOptionPane.showOptionDialog(this, 
                "Escolha o tipo de conta:", 
                "Tipo de Conta", 
                JOptionPane.DEFAULT_OPTION, 
                JOptionPane.QUESTION_MESSAGE, 
                null, opcoes, opcoes[0]);
            
            if (escolha == -1) return; // Usuário cancelou
            
            String tipo = (escolha == 0) ? "cc" : "cp";
            
            // Cria nova conta
            ContaBanco novaConta = new ContaBanco();
            novaConta.abrirConta(tipo, dono, cpfCnpj, telefone);
            
            // Adiciona à lista de contas
            contas.add(novaConta);
            
            JOptionPane.showMessageDialog(this, 
                "Conta aberta com sucesso!\n\n" + 
                "Dados da conta:\n" +
                "Número da Conta: " + novaConta.getNumeroConta() + "\n" +
                "Titular: " + novaConta.getDono() + "\n" +
                "Tipo: " + (tipo.equals("cc") ? "Conta Corrente" : "Conta Poupança") + "\n" +
                "Bônus: R$ " + (tipo.equals("cc") ? "50,00" : "150,00") + "\n" +
                "Saldo inicial: R$ " + novaConta.getSaldo() + "\n\n" +
                "Guarde o número da conta: " + novaConta.getNumeroConta(),
                "Conta Aberta", JOptionPane.INFORMATION_MESSAGE);
                
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAbrirContaActionPerformed

    private void btnCancelarContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarContaActionPerformed
        if (!fazerLogin()) return;
        
        try {
            int confirm = JOptionPane.showConfirmDialog(this, 
                "Tem certeza que deseja cancelar a conta?\n\n" +
                contaAtual.exibirInfo() + "\n\n" +
                "Esta ação não pode ser desfeita.", 
                "Confirmar Cancelamento", 
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
            
            if (confirm == JOptionPane.YES_OPTION) {
                contaAtual.fecharConta();
                contas.remove(contaAtual); // Remove da lista de contas ativas
                JOptionPane.showMessageDialog(this, 
                    "Conta cancelada com sucesso!", 
                    "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                contaAtual = null; // Desloga o usuário
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCancelarContaActionPerformed

    private void btnSacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacarActionPerformed
        if (!fazerLogin()) return;
        
        try {
            String valorStr = JOptionPane.showInputDialog(this, 
                "Saldo atual: R$ " + contaAtual.getSaldo() + 
                "\nDigite o valor para saque:", 
                "Saque", JOptionPane.QUESTION_MESSAGE);
            
            if (valorStr != null && !valorStr.trim().isEmpty()) {
                float valor = Float.parseFloat(valorStr);
                contaAtual.sacar(valor);
                JOptionPane.showMessageDialog(this, 
                    "Saque realizado com sucesso!\nNovo saldo: R$ " + contaAtual.getSaldo(),
                    "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Valor inválido! Digite um número válido.", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSacarActionPerformed

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
        if (!fazerLogin()) return;
        
        try {
            int confirm = JOptionPane.showConfirmDialog(this, 
                "Dados da conta:\n" + contaAtual.exibirInfo() + 
                "\n\nMensalidade: R$ " + (contaAtual.getTipo().equals("cc") ? "12,00" : "20,00") +
                "\nDeseja pagar a mensalidade?", 
                "Pagar Mensalidade", 
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
            
            if (confirm == JOptionPane.YES_OPTION) {
                contaAtual.pagarMensalidade();
                JOptionPane.showMessageDialog(this, 
                    "Mensalidade paga com sucesso!\nNovo saldo: R$ " + contaAtual.getSaldo(),
                    "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPagarActionPerformed

    // Método para fazer login antes de operações
    private boolean fazerLogin() {
        // Tela de login
        javax.swing.JTextField numeroContaField = new javax.swing.JTextField();
        javax.swing.JTextField cpfCnpjField = new javax.swing.JTextField();
        
        Object[] message = {
            "Número da Conta:", numeroContaField,
            "CPF/CNPJ:", cpfCnpjField
        };
        
        int option = JOptionPane.showConfirmDialog(this, 
            message, 
            "Login - Acesso à Conta", 
            JOptionPane.OK_CANCEL_OPTION,
            JOptionPane.QUESTION_MESSAGE);
        
        if (option == JOptionPane.OK_OPTION) {
            String numeroConta = numeroContaField.getText().trim();
            String cpfCnpj = cpfCnpjField.getText().trim();
            
            if (numeroConta.isEmpty() || cpfCnpj.isEmpty()) {
                JOptionPane.showMessageDialog(this, 
                    "Preencha todos os campos!", 
                    "Erro de Login", JOptionPane.ERROR_MESSAGE);
                return false;
            }
            
            // Busca a conta na lista
            contaAtual = buscarConta(numeroConta, cpfCnpj);
            
            if (contaAtual != null) {
                JOptionPane.showMessageDialog(this, 
                    "Login realizado com sucesso!\n\nBem-vindo, " + contaAtual.getDono() + "!",
                    "Login Bem-sucedido", JOptionPane.INFORMATION_MESSAGE);
                return true;
            } else {
                JOptionPane.showMessageDialog(this, 
                    "Conta não encontrada ou credenciais inválidas!\nVerifique o número da conta e CPF/CNPJ.",
                    "Erro de Login", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        
        return false;
    }
    
    // Método para buscar conta pelas credenciais
    private ContaBanco buscarConta(String numeroConta, String cpfCnpj) {
        for (ContaBanco conta : contas) {
            if (conta.verificarCredenciais(numeroConta, cpfCnpj)) {
                return conta;
            }
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Banco().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirConta;
    private javax.swing.JButton btnCancelarConta;
    private javax.swing.JButton btnDepositar;
    private javax.swing.JButton btnPagar;
    private javax.swing.JButton btnSacar;
    private javax.swing.JLabel imagemAdicionar;
    private javax.swing.JLabel imagemCancelar;
    private javax.swing.JLabel imagemDepositar;
    private javax.swing.JLabel imagemPagar;
    private javax.swing.JLabel imagemSacar;
    private javax.swing.JLabel imgBanco;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblBanco;
    // End of variables declaration//GEN-END:variables
}
